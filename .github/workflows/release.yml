name: Release and Publish to GHCR

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm semantic-release

  docker:
    needs: release
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version
        id: version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          VERSION=${LATEST_TAG#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION from tag: $LATEST_TAG"

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          docker build -t $IMAGE_NAME:${{ env.VERSION }} -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:${{ env.VERSION }}
          docker push $IMAGE_NAME:latest
